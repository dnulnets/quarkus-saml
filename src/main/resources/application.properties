#
# IDProxy configuration
#

# The base URL of the IDProxy application, used to construct the redirect URL for the
# login page when the user is not authenticated and tries to request a protected resource.
idproxy.base-url=http://localhost:8080

# A regexp that check to see if the return URL is a valid one, we do not want to be used
# as an open redirector. It can be multiple regexps.
idproxy.valid-return-url[0]=^http:\/\/localhost:8080\/.*$

#
# Session cookie configuration
#

# The key for encryption of the session cookie, it is used to calculate a SHA-256 hash
# of the key that is then used as the key for the encryption. So it can be any length.
idproxy.security.session.cookie.key=changemefromthissimplekey

#
# The default value is IDPROXY and if you change it you also have to change the undertow-handlers.conf
# file in the src/main/resources/META-INF directory so the correct SameSite is set. It must be None for
# the SAML POST to work.
#
#idproxy.security.session.cookie.name=IDPROXY

# The domain of the session cookie, it is used to set the domain attribute of the cookie
# and must match the domain of the application (see idproxy.base-url).
idproxy.security.session.cookie.domain=localhost

#
# Identity cookie configuration (holds the JWT token)
#

#
# The default value is ID and if you change it you also have to change the undertow-handlers.conf
# file in the src/main/resources/META-INF directory so the correct SameSite is set. It can be
# None or Lax depending on your security requirements. Lax is recommended.
#
#idproxy.security.jwt.cookie.name=ID

# The domain of the session cookie, it is used to set the domain attribute of the cookie
# and must match the domain of the application. Typically it must match the return URL
# in the login endpoint.
idproxy.security.jwt.cookie.domain=localhost

# The path of the cookie, it is used to set the path attribute of the cookie and must match
# the path of the application. Typically it must match the return URL in the login endpoint.
idproxy.security.jwt.cookie.path=/

#
# SAML IDP (upstream IDP) configuration
#

# The entityID of the IDP, it is used to locate the metadata for the upstream IDP used
# to send the SAML request.
idproxy.idp.entityID=https://galatea.stenlund.eu/idp

# The location of the metadata file for the IDP, must contain metadata for the entityID
# provided above.
idproxy.idp.metadata=/home/tomas/projects/quarkus-saml/src/main/resources/idp-metadata.xml

# The attribute used in the SAML response to identify the user. The default value is
# shown below.
#idproxy.idp.uid=urn:oid:0.9.2342.19200300.100.1.1
#idproxy.idp.friendlyUID=uid

#
# SAML SP (this application) configuration
#

# The entityID of the SP, it is used to construct the SAML request and must match the
# the metadata that you register with the upstream IDP. The metadata has to be manually
# created and registered with the upstream IDP. The assertion consumer service URL is
# the URL of the assert endpoint, POST only. See the example metadata for the SP
# in the src/main/resources directory.
idproxy.sp.entityID=https://tomas.stenlund.eu

# The location of the signature and encryption keys, must be matched with their respective
# public certificates in the metadata.
idproxy.sp.signing.pem=/home/tomas/projects/quarkus-saml/src/main/resources/sp-signing.key
idproxy.sp.encryption.pem=/home/tomas/projects/quarkus-saml/src/main/resources/sp-encryption.key

# The contexts we want when requesting authentication. The default value is no requested
# contexts.
#idproxy.sp.context[0] = http://id.swedenconnect.se/loa/1.0/uncertified-loa3
#idproxy.sp.context[1] = http://id.swedenconnect.se/loa/1.0/uncertified-eidas-sub
#idproxy.sp.context[2] = http://id.swedenconnect.se/loa/1.0/uncertified-eidas-high

#
# Small Rye JWT verification configuration. Make sure you update it with the SP entityID as
# the audience and the IDP entityID as the issuer.
#

# We use a cookie to store the JWT token. It must have this value.
mp.jwt.token.header=Cookie

# The name of the cookie that holds the JWT token. Must match the value set in
# idproxy.security.session.cookie.name or the default if not set.
mp.jwt.token.cookie=ID

# The issuer and audience of the JWT token, must match the IDP entityID and the SP entityID.
mp.jwt.verify.issuer=https://galatea.stenlund.eu/idp
mp.jwt.verify.audiences=https://tomas.stenlund.eu

# The location of the public and private keys to sign and verify the token.
mp.jwt.verify.publickey.location=/home/tomas/projects/quarkus-saml/src/main/resources/jwt.crt
smallrye.jwt.sign.key.location=/home/tomas/projects/quarkus-saml/src/main/resources/jwt.key

# Logging configuration
#quarkus.log.category."io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator".level=TRACE
#quarkus.log.category."io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator".min-level=TRACE

#quarkus.http.auth.proactive=false
